# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @upper on FIELD_DEFINITION

"""Summary"""
type Summary {
  date: Date
  time: Float
}

type SummaryGetResponse {
  data: [Summary!]!
  totalTime: Float!
}

"""Task"""
type Task {
  _id: String
  taskId: String
  date: Date
  name: String
  comment: String
  completeness: Float
  excludedFromSearch: Boolean
}

type TaskCreateResponse {
  data: Task!
}

type TaskUpdateResponse {
  data: Task!
}

type TaskGetResponse {
  data: [Task!]!
}

type TaskDeleteResponse {
  data: Task!
}

"""Timestamp"""
type Timestamp {
  timestamp: Date
  type: TimestampType
}

enum TimestampType {
  Start
  End
  StartBreak
  EndBreak
}

type TimestampCreateResponse {
  data: Timestamp!
}

type TimestampGetResponse {
  data: [Timestamp!]!
  workTime: [Float!]!
  breaks: [Float!]!
  totalTime: Float!
}

type TimestampDeleteResponse {
  data: Timestamp!
}

"""Calendar"""
type Calendar {
  date: Date
  type: CalendarType
  time: Float
}

enum CalendarType {
  WorkingDay
  Weekend
  PaidWeekend
  SickLeave
  PaidSickLeave
  BusinessTrip
}

type CalendarCreateResponse {
  data: Calendar!
}

type CalendarGetResponse {
  data: [Calendar!]!
  totalTime: Float
}

type CalendarDeleteResponse {
  data: Calendar!
}

"""recipe """
type Recipe {
  id: ID!
  description: String
  creationDate: Date!
  ingredients: [String!]!
}

"""Date custom scalar type"""
scalar Date

type Query {
  timestamps(date: Date, raw: Boolean): TimestampGetResponse!
  summary(from: Date, to: Date, recalculate: Boolean): SummaryGetResponse!
  tasks(from: Date, to: Date, incomplete: Boolean, includeAll: Boolean): TaskGetResponse!
  calendar(year: Float, month: Float, fillUp: Boolean, firstDayOfWeek: FirstDayOfWeek, summary: Boolean): CalendarGetResponse!
  recipe(id: String!): Recipe!
  recipes(skip: Int! = 0, take: Int! = 25): [Recipe!]!
}

enum FirstDayOfWeek {
  Sunday
  Monday
}

type Mutation {
  createTimestamp(timestamp: Date!, type: TimestampType!): TimestampCreateResponse!
  deleteTimestamp(timestamp: Date!): TimestampDeleteResponse!
  createTask(taskId: String, date: Date!, name: String!, comment: String, completeness: Float, excludedFromSearch: Boolean): TaskCreateResponse!
  updateTask(id: String!, taskId: String, name: String, comment: String, completeness: Float, excludedFromSearch: Boolean): TaskUpdateResponse!
  deleteTask(id: String!): TaskDeleteResponse!
  createCalendarDay(date: Date!, type: CalendarType!): CalendarCreateResponse!
  deleteCalendarDay(date: Date!): CalendarDeleteResponse!
  addRecipe(newRecipeData: NewRecipeInput!): Recipe!
  removeRecipe(id: String!): Boolean!
}

input NewRecipeInput {
  title: String!
  description: String
  ingredients: [String!]!
}

type Subscription {
  recipeAdded: Recipe!
}